{"majorversion": 3, "classmap": {"Slideshow": {"name": "Slideshow", "configs": {"transOutAfter": {"default": "(See source)", "type": "Object", "description": "Default transOut (outgoing slide) \"after\" settings. Sets visibility:hidden and z-index:-30000.", "guessedname": "transOutAfter", "guessedtype": "property"}, "interval": {"default": "4", "type": "Float|Array", "description": "Time interval(s) between slide transitions in seconds.", "guessedname": "interval", "guessedtype": "property"}, "_isHoverPaused": {"description": "Hover paused flag.", "default": "false", "protected": "", "guessedname": "_isHoverPaused", "guessedtype": "property", "type": "Boolean"}, "transOutBefore": {"default": "(See source)", "type": "Object", "description": "Default transOut (outgoing slide) \"before\" settings. Sets z-index:2.", "guessedname": "transOutBefore", "guessedtype": "property"}, "pauseOnChange": {"default": "true", "type": "Boolean", "description": "Set to false to continue autoplay when the user changes slides.", "guessedname": "pauseOnChange", "guessedtype": "property"}, "duration": {"default": "null", "type": "Float", "description": "Default duration for slide transitions.", "guessedname": "duration", "guessedtype": "property"}, "_timeoutID": {"description": "The ID returned by autoplay's setTimeout call.", "default": "null", "protected": "", "guessedname": "_timeoutID", "guessedtype": "property", "type": "Integer"}, "transInAfter": {"default": "(See source)", "type": "Object", "description": "Default transIn (incoming slide) \"after\" settings. Sets z-index:2.", "guessedname": "transInAfter", "guessedtype": "property"}, "transInBefore": {"default": "(See source)", "type": "Object", "description": "Default transIn (incoming slide) \"before\" settings. Sets visibility:visible and z-index:1.", "guessedname": "transInBefore", "guessedtype": "property"}, "playButton": {"default": "null", "type": "Mixed", "description": "Play button Node/NodeList/selector string.", "guessedname": "playButton", "guessedtype": "property"}, "pauseOnHover": {"default": "true", "type": "Boolean", "description": "Set to false to continue playing when the user hovers over the slideshow.", "guessedname": "pauseOnHover", "guessedtype": "property"}, "slides": {"default": "null", "type": "NodeList", "description": "Slides NodeList instance.", "guessedname": "slides", "guessedtype": "property"}, "pages": {"default": "null", "type": "Mixed", "description": "NodeList/selector string for the elements that correspond to slides.\nThis setting works best with list items.", "guessedname": "pages", "guessedtype": "property"}, "_outgoingSlide": {"description": "Outgoing slide Node.", "default": "null", "protected": "", "guessedname": "_outgoingSlide", "guessedtype": "property", "type": "Node Instance"}, "pauseButton": {"default": "null", "type": "Mixed", "description": "Pause button Node/NodeList/selector string.", "guessedname": "pauseButton", "guessedtype": "property"}, "_incomingSlide": {"description": "Incoming slide Node.", "default": "null", "protected": "", "guessedname": "_incomingSlide", "guessedtype": "property", "type": "Node Instance"}, "transition": {"default": "Slideshow.PRESETS.fade", "type": "Slide Transition", "description": "Default slide transition.", "guessedname": "transition", "guessedtype": "property"}, "previousButton": {"default": "null", "type": "Mixed", "description": "Previous slide button Node/NodeList/selector string.", "guessedname": "previousButton", "guessedtype": "property"}, "currentIndex": {"default": "0", "type": "Integer", "description": "Current slide index.", "guessedname": "currentIndex", "guessedtype": "property"}, "_isPaused": {"description": "Paused flag.", "default": "true", "protected": "", "guessedname": "_isPaused", "guessedtype": "property", "type": "Boolean"}, "easing": {"default": "ease-out", "type": "String", "description": "Default slide transition easing.", "guessedname": "easing", "guessedtype": "property"}, "nextButton": {"default": "null", "type": "Mixed", "description": "Next slide button Node/NodeList/selector string.", "guessedname": "nextButton", "guessedtype": "property"}, "autoplay": {"default": "true", "type": "Boolean", "description": "Set to false to disable autoplay.", "guessedname": "autoplay", "guessedtype": "property"}}, "constructors": [{"params": [{"type": "Object", "name": "config", "description": " Widget configuration object."}], "description": "A simple YUI3 slideshow kit inspired by the jQuery Cycle plugin."}], "namespace": "", "module": "gallery-yui-slideshow", "events": {"_incomingSlideChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "_incomingSlideChange", "description": "Fires when the value for the configuration attribute '_incomingSlide' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "transOutBeforeChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "transOutBeforeChange", "description": "Fires when the value for the configuration attribute 'transOutBefore' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "slidesChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "slidesChange", "description": "Fires when the value for the configuration attribute 'slides' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "_isHoverPausedChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "_isHoverPausedChange", "description": "Fires when the value for the configuration attribute '_isHoverPaused' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "_next": {"params": [{"type": "Event", "name": "e", "description": " The Event object."}], "description": "Advances the slideshow by one slide.", "guessedname": "_next", "guessedtype": "function"}, "_outgoingSlideChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "_outgoingSlideChange", "description": "Fires when the value for the configuration attribute '_outgoingSlide' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "easingChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "easingChange", "description": "Fires when the value for the configuration attribute 'easing' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "_play": {"params": [{"type": "Event", "name": "e", "description": " The Event object."}], "description": "Plays the slideshow.", "guessedname": "_play", "guessedtype": "function"}, "pagesChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "pagesChange", "description": "Fires when the value for the configuration attribute 'pages' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "currentIndexChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "currentIndexChange", "description": "Fires when the value for the configuration attribute 'currentIndex' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "pauseOnChangeChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "pauseOnChangeChange", "description": "Fires when the value for the configuration attribute 'pauseOnChange' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "pauseButtonChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "pauseButtonChange", "description": "Fires when the value for the configuration attribute 'pauseButton' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "_timeoutIDChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "_timeoutIDChange", "description": "Fires when the value for the configuration attribute '_timeoutID' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "_hoverplay": {"params": [{"type": "Event", "name": "e", "description": " The Event object."}], "description": "Plays the slideshow if it was hoverpaused.", "guessedname": "_hoverplay", "guessedtype": "function"}, "_slide": {"params": [{"type": "Event", "name": "e", "description": " The Event object."}], "description": "Performs the slide transition.", "guessedname": "_slide", "guessedtype": "function"}, "intervalChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "intervalChange", "description": "Fires when the value for the configuration attribute 'interval' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "autoplayChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "autoplayChange", "description": "Fires when the value for the configuration attribute 'autoplay' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "durationChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "durationChange", "description": "Fires when the value for the configuration attribute 'duration' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "_previous": {"params": [{"type": "Event", "name": "e", "description": " The Event object."}], "description": "Reverses the slideshow by one slide.", "guessedname": "_previous", "guessedtype": "function"}, "playButtonChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "playButtonChange", "description": "Fires when the value for the configuration attribute 'playButton' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "transitionChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "transitionChange", "description": "Fires when the value for the configuration attribute 'transition' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "_hoverpause": {"params": [{"type": "Event", "name": "e", "description": " The Event object."}], "description": "Pauses the slideshow momentarily if not already paused.", "guessedname": "_hoverpause", "guessedtype": "function"}, "pauseOnHoverChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "pauseOnHoverChange", "description": "Fires when the value for the configuration attribute 'pauseOnHover' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "nextButtonChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "nextButtonChange", "description": "Fires when the value for the configuration attribute 'nextButton' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "transInAfterChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "transInAfterChange", "description": "Fires when the value for the configuration attribute 'transInAfter' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "_isPausedChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "_isPausedChange", "description": "Fires when the value for the configuration attribute '_isPaused' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "_pause": {"params": [{"type": "Event", "name": "e", "description": " The Event object."}], "description": "Pauses the slideshow.", "guessedname": "_pause", "guessedtype": "function"}, "previousButtonChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "previousButtonChange", "description": "Fires when the value for the configuration attribute 'previousButton' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "_timeout": {"params": [{"type": "Event", "name": "e", "description": " The Event object."}], "description": "Calls setTimeout for autoplay.", "guessedname": "_timeout", "guessedtype": "function"}, "transInBeforeChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "transInBeforeChange", "description": "Fires when the value for the configuration attribute 'transInBefore' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}, "transOutAfterChange": {"params": [{"type": "Event.Facade", "name": "event", "description": "An Event Facade object with      the following attribute specific properties added:\t<dl>\t\t<dt>prevVal</dt>\t\t<dd>The value of the attribute, prior to it being set</dd>\t\t<dt>newVal</dt>\t\t<dd>The value the attribute is to be set to</dd>\t\t<dt>attrName</dt>\t\t<dd>The name of the attribute being set</dd>\t\t<dt>subAttrName</dt>\t\t<dd>If setting a property within the attribute's value,           the name of the sub-attribute property being set</dd>\t</dl>"}], "name": "transOutAfterChange", "description": "Fires when the value for the configuration attribute 'transOutAfter' is changed. You can listen for the event using the <a href=\"Attribute.html#method_on\">on</a> method if you wish to be notified before the attribute's value has changed, or using the <a href=\"Event.Target.html#method_after\">after</a> method if you wish to be notified after the attribute's value has changed."}}, "guessedname": "Slideshow", "methods": {"play": {"description": "Fires \"slideshow:play\" event.\nThis method is chainable.", "guessedname": "play", "guessedtype": "function"}, "pause": {"description": "Fires \"slideshow:pause\" event.\nThis method is chainable.", "guessedname": "pause", "guessedtype": "function"}, "_checkTransitionValues": {"return": {"type": "Mixed", "description": "The sanitized transition."}, "description": "Sanitizes transition values with _checkCSSValue.", "protected": "", "params": [{"type": "Node", "name": "$node", "description": " The Node to use if shortcut keywords are found."}, {"type": "Object", "name": "$transition", "description": " The transition to check."}], "guessedname": "_checkTransitionValues", "guessedtype": "function"}, "syncUI": {"description": "Sets initial widget state.", "guessedname": "syncUI", "guessedtype": "function"}, "_checkCSSValue": {"return": {"type": "Mixed", "description": "The parsed CSS value."}, "description": "Checks CSS values for shortcut keywords.", "protected": "", "params": [{"type": "Node", "name": "$node", "description": " The Node to use if shortcut keywords are found."}, {"type": "Mixed", "name": "$value", "description": " The CSS value to check."}], "guessedname": "_checkCSSValue", "guessedtype": "function"}, "_setActivePage": {"protected": "", "description": "Sets active class on current page Node.", "guessedname": "_setActivePage", "guessedtype": "function"}, "_handleMouseleave": {"protected": "", "params": [{"type": "Event", "name": "e", "description": " The Event object."}], "description": "Handles mouseleave on the contentBox.", "guessedname": "_handleMouseleave", "guessedtype": "function"}, "next": {"description": "Fires \"slideshow:next\" event.\nThis method is chainable.", "guessedname": "next", "guessedtype": "function"}, "slide": {"params": [{"type": "Mixed", "name": "$which", "description": "  The slide to advance to. Can be a slide index, \"next\", or \"previous\"."}], "description": "Adjusts the currentIndex and fires the \"slideshow:slide\" event.\nThis method is chainable.", "guessedname": "slide", "guessedtype": "function"}, "_setStyles": {"protected": "", "params": [{"type": "Node", "name": "$node", "description": " The node to style."}, {"type": "Object", "name": "$styles", "description": " The styles to set."}], "description": "Sets styles after they are sanitized by _checkCSSValue.", "guessedname": "_setStyles", "guessedtype": "function"}, "bindUI": {"description": "Binds event handlers and publishes custom events.", "guessedname": "bindUI", "guessedtype": "function"}, "_handlePageClick": {"protected": "", "params": [{"type": "Event", "name": "e", "description": " The Event object."}], "description": "Handles clicks on pagination elements.", "guessedname": "_handlePageClick", "guessedtype": "function"}, "_handleMouseenter": {"protected": "", "params": [{"type": "Event", "name": "e", "description": " The Event object."}], "description": "Handles mouseenter on the contentBox.", "guessedname": "_handleMouseenter", "guessedtype": "function"}, "initializer": {"description": "Initializes the Slideshow.", "guessedname": "initializer", "guessedtype": "function"}, "previous": {"description": "Fires \"slideshow:previous\" event.\nThis method is chainable.", "guessedname": "previous", "guessedtype": "function"}}, "file": "gallery-yui-slideshow.js", "guessedtype": "function", "shortname": "Slideshow", "properties": {"PRESETS.slideDown": {"type": "Preset Slide Transition", "description": "Both slides slide from top to bottom.", "guessedname": "slideDown", "guessedtype": "property"}, "NAME": {"default": "Slideshow", "type": "String", "guessedname": "NAME", "guessedtype": "property"}, "PRESETS.slideUp": {"type": "Preset Slide Transition", "description": "Both slides slide from bottom to top.", "guessedname": "slideUp", "guessedtype": "property"}, "PRESETS.slideRight": {"type": "Preset Slide Transition", "description": "Both slides slide from left to right.", "guessedname": "slideRight", "guessedtype": "property"}, "PRESETS.fade": {"type": "Preset Slide Transition", "description": "Incoming slide fades in.\nOutgoing slide fades out.", "guessedname": "fade", "guessedtype": "property"}, "PRESETS.slideLeft": {"type": "Preset Slide Transition", "description": "Both slides slide from right to left.", "guessedname": "slideLeft", "guessedtype": "property"}}, "description": "A simple YUI3 slideshow kit inspired by the jQuery Cycle plugin."}}, "version": "2.1.0", "modules": {"gallery-yui-slideshow": {"description": "A simple YUI3 slideshow kit inspired by the jQuery Cycle plugin.", "submodules": [], "classlist": ["Slideshow"], "author": "Josh Lizarraga", "filelist": ["gallery-yui-slideshow.js"], "subdata": {}, "requires": "widget, transition, event-mouseenter", "name": "gallery-yui-slideshow"}}, "filemap": {"gallery-yui-slideshow.js": {"classlist": ["Slideshow"], "name": "gallery-yui-slideshow.js", "module": "gallery-yui-slideshow"}}}